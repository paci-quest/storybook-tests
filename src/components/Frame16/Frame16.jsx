/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { FormControl, RadioGroup, Radio, FormControlLabel } from '@mui/material';
import { styled } from '@mui/material/styles';

 
const RadioGroupBox = styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `center`,  
  alignItems: `center`,  
  padding: `31px 63px`,  
  boxSizing: `border-box`,  
  height: `302px`,  
  width: "100%",  
});
  
const Frame17 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  height: `85px`,  
  width: `154px`,  
  margin: `0px`,  
  overflow: `hidden`,  
});
  
const RadioGroupBox1 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: theme.typography["Typography"]["Body 1"].fontStyle,  
  fontFamily: theme.typography["Typography"]["Body 1"].fontFamily,  
  fontWeight: theme.typography["Typography"]["Body 1"].fontWeight,  
  fontSize: theme.typography["Typography"]["Body 1"].fontSize,  
  letterSpacing: theme.typography["Typography"]["Body 1"].letterSpacing,  
  textDecoration: theme.typography["Typography"]["Body 1"].textDecoration,  
  lineHeight: theme.typography["Typography"]["Body 1"].lineHeight,  
  textTransform: theme.typography["Typography"]["Body 1"].textTransform,  
  width: `144px`,  
  height: `42px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `34px`,  
}));
  
const Frame18 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  width: `144px`,  
  margin: `3px 0px 0px 0px`,  
});
  
const FormControlLabel1 = styled(FormControlLabel)({  
  margin: `0px`,  
});
  
const FormControlLabel2 = styled(FormControlLabel)({  
  margin: `13px 0px 0px 0px`,  
});
  
const FormControlLabel3 = styled(FormControlLabel)({  
  margin: `13px 0px 0px 0px`,  
});
 
function Frame16(props) {
  
  return (
    <RadioGroupBox  className={props.className}   >
      <Frame17 >
        <RadioGroupBox1 >
          {`RadioGroup Box`}
            </RadioGroupBox1>
      </Frame17>
      <Frame18 >
        <FormControl>  
          <RadioGroup id={radio-group-1} name={radioGroup} aria-label={radioGroup} >
            <FormControlLabel1  control={<Radio color="primary" size="medium" />} label={"Label"} />
            <FormControlLabel2  control={<Radio color="primary" size="medium" />} label={"Label"} />
            <FormControlLabel3  control={<Radio color="primary" size="medium" />} label={"Label"} />
          </RadioGroup>
        </FormControl>
      </Frame18>
    </RadioGroupBox>
  );
}

export default Frame16;
